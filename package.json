{
  "name": "@brlt/n",
  "version": "0.0.6",
  "license": "MIT",
  "author": "Nicholas Berlette <nick@berlette.com>",
  "contributors": [
    "Anthony Fu <anthonyfu117@hotmail.com>",
    "Nicholas Berlette <nick@berlette.com>"
  ],
  "bugs": "https://github.com/nberlette/n/issues",
  "homepage": "https://github.com/nberlette/n#readme",
  "readme": "https://github.com/nberlette/n#readme",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/nberlette/n.git"
  },
  "description": "Use the right package manager",
  "keywords": [
    "pnpm",
    "yarn",
    "npm",
    "cli"
  ],
  "packageManager": "pnpm@7.0.0",
  "publishConfig": {
    "access": "public"
  },
  "files": [
    "dist",
    "bin"
  ],
  "main": "dist/index.js",
  "module": "dist/index.mjs",
  "types": "dist/index.d.ts",
  "exports": {
    ".": {
      "types": "./dist/index.d.ts",
      "import": "./dist/index.mjs",
      "require": "./dist/index.js",
      "default": "./dist/index.js"
    },
    "./package.json": "./package.json",
    "./nci": {
      "import": "./dist/nci.mjs",
      "require": "./dist/nci.js"
    },
    "./nex": {
      "import": "./dist/nex.mjs",
      "require": "./dist/nex.js"
    },
    "./nb": {
      "import": "./dist/nb.mjs",
      "require": "./dist/nb.js"
    },
    "./nh": {
      "import": "./dist/nh.mjs",
      "require": "./dist/nh.js"
    },
    "./nls": {
      "import": "./dist/nls.mjs",
      "require": "./dist/nls.js"
    },
    "./no": {
      "import": "./dist/no.mjs",
      "require": "./dist/no.js"
    },
    "./np": {
      "import": "./dist/np.mjs",
      "require": "./dist/np.js"
    },
    "./nr": {
      "import": "./dist/nr.mjs",
      "require": "./dist/nr.js"
    },
    "./nl": {
      "import": "./dist/nl.mjs",
      "require": "./dist/nl.js"
    },
    "./nun": {
      "import": "./dist/nun.mjs",
      "require": "./dist/nun.js"
    },
    "./nu": {
      "import": "./dist/nu.mjs",
      "require": "./dist/nu.js"
    },
    "./nt": {
      "import": "./dist/nt.mjs",
      "require": "./dist/nt.js"
    },
    "./nv": {
      "import": "./dist/nv.mjs",
      "require": "./dist/nv.js"
    },
    "./ni": {
      "import": "./dist/ni.mjs",
      "require": "./dist/ni.js"
    },
    "./nd": {
      "import": "./dist/nd.mjs",
      "require": "./dist/nd.js"
    },
    "./na": {
      "import": "./dist/na.mjs",
      "require": "./dist/na.js"
    }
  },
  "bin": {
    "na": "bin/na.js",
    "nd": "bin/nd.js",
    "nex": "bin/nex.js",
    "nci": "bin/nci.js",
    "nl": "bin/nl.js",
    "ni": "bin/ni.js",
    "nls": "bin/nls.js",
    "np": "bin/np.js",
    "no": "bin/no.js",
    "nr": "bin/nr.js",
    "nt": "bin/nt.js",
    "nv": "bin/nv.js",
    "nu": "bin/nu.js",
    "nb": "bin/nb.js",
    "nh": "bin/nh.js",
    "nun": "bin/nun.js"
  },
  "tsup": {
    "entry": [
      "./src/index.ts",
      "./src/n{a,b,ci,d,ex,h,i,l,ls,p,o,r,t,v,u,un}.ts"
    ],
    "platform": "node",
    "outDir": "dist",
    "format": [
      "esm"
    ],
    "onSuccess": "",
    "dts": true,
    "sourcemap": false,
    "minify": true,
    "clean": true
  },
  "scripts": {
    "info": "npm-scripts-info",
    "prepublishOnly": "pnpm clean && pnpm build",
    "watch": "pnpm build -- --watch",
    "?watch": "echo 'Watches source files and rebuilds package when changes are detected.'",
    "build": "tsup && esno scripts/postbuild.ts",
    "?build": "echo 'Builds the package and all binaries in production mode'",
    "dev": "pnpm watch",
    "release": "pnpx bumpp --commit 'ðŸ“¦ v%s' --push --tag && pnpm publish --no-git-checks",
    "?release": "echo 'Bump version, commits/tags/push files to git, and publish to NPM.'",
    "lint": "eslint --ignore-path=.gitignore \"**/*.ts\"",
    "?lint": "echo 'Check all source files for syntax errors.'",
    "lint:fix": "pnpm lint -- --fix",
    "?lint:fix": "echo 'Attempts to automatically fix syntax errors in source files.'",
    "format:base": "prettier --ignore-path=.gitignore --plugin-search-dir=. '**/*.ts'",
    "format:check": "pnpm format:base -c",
    "?format:check": "echo 'Checks all source files for conformance with code style.'",
    "format": "pnpm format:base -w",
    "?format": "echo 'Formats all source files for conformance with code style.'",
    "test": "vitest",
    "?test": "echo 'Runs a test suite to ensure proper code coverage.'",
    "clean": "rimraf dist bin",
    "?clean": "echo 'Remove artifacts from the build process.'",
    "clean:all": "rimraf dist bin node_modules",
    "?clean:all": "echo 'Removes all dependency files and build artifacts.'",
    "ni": "esno src/ni.ts",
    "?ni": "echo 'Runs \"install\" for the appropriate package manager.'",
    "nci": "esno src/nci.ts",
    "?nci": "echo 'Runs \"install --frozen-lockfile\" for the appropriate package manager.'",
    "nr": "esno src/nr.ts",
    "?nr": "echo 'Executes a script from the nearest package.json file.'",
    "nex": "esno src/nex.ts",
    "?nex": "echo 'Executes a remote package binary without installing any dependencies.'",
    "nun": "esno src/nun.ts",
    "?nun": "echo 'Uninstalls a given dependency and removes it from package.json'",
    "nu": "esno src/nu.ts",
    "?nu": "echo 'Update dependencies.'",
    "no": "esno src/no.ts",
    "?no": "echo 'Check for outdated dependencies'",
    "nv": "esno src/nv.ts",
    "?nv": "echo 'Get all dependencies versions, or modify the root package version.'",
    "nd": "esno src/nd.ts",
    "?nd": "echo 'Prints diff patches of files for packages published to npm registry.'",
    "nh": "esno src/nh.ts",
    "?nh": "echo 'Get help on npm, pnpm, or yarn.'",
    "na": "esno src/na.ts",
    "?na": "echo 'Audit dependencies for security vulnerabilities.'",
    "nl": "esno src/nl.ts",
    "?nl": "echo 'Link dependencies between different locations.'",
    "nls": "esno src/nls.ts",
    "?nls": "echo 'List install packages / dependencies'",
    "nt": "esno src/nt.ts",
    "?nt": "echo 'Run a test script to ensure code coverage.'",
    "np": "esno src/np.ts",
    "?np": "echo 'Publish a package to the npm registry.'",
    "nb": "esno src/nb.ts",
    "?nb": "echo 'Determine a package binary path.'"
  },
  "devDependencies": {
    "@antfu/eslint-config-ts": "^0.20.3",
    "@antfu/utils": "^0.5.1",
    "@brlt/prettier": "^1.6.4",
    "@types/ini": "^1.3.31",
    "@types/node": "^17.0.24",
    "@types/prompts": "^2.0.14",
    "@types/which": "^2.0.1",
    "eslint": "^8.13.0",
    "esm": "^3.2.25",
    "esno": "^0.14.1",
    "execa": "^6.1.0",
    "find-up": "^6.3.0",
    "fs-extra": "^10.1.0",
    "fsxx": "^0.0.5",
    "ini": "^3.0.0",
    "npm-scripts-info": "^0.3.9",
    "pnpm": "^7.0.0",
    "prompts": "^2.4.2",
    "rimraf": "^3.0.2",
    "terminal-link": "^3.0.0",
    "tsm": "^2.2.1",
    "tsup": "^5.12.5",
    "typescript": "^4.6.3",
    "vitest": "^0.9.3",
    "which": "^2.0.2",
    "zx": "^6.1.0"
  }
}
